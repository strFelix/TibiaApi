// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TibiaApi.Data;

#nullable disable

namespace TibiaApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231205113115_BetaCharacter")]
    partial class BetaCharacter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TibiaApi.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_ACCOUNTS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "beta.tester@gmail.com",
                            PasswordHash = new byte[] { 209, 245, 106, 177, 27, 69, 196, 175, 149, 171, 2, 186, 66, 208, 242, 254, 168, 181, 166, 54, 207, 152, 84, 77, 158, 252, 169, 130, 67, 167, 226, 216, 41, 232, 90, 66, 253, 114, 89, 75, 210, 175, 156, 109, 44, 132, 76, 0, 67, 248, 209, 31, 136, 247, 52, 170, 82, 185, 227, 185, 133, 212, 167, 221 },
                            PasswordSalt = new byte[] { 91, 194, 131, 249, 188, 92, 250, 92, 127, 153, 49, 9, 44, 153, 54, 241, 174, 39, 8, 37, 74, 225, 167, 111, 203, 236, 249, 67, 5, 107, 253, 150, 245, 253, 192, 27, 46, 215, 201, 194, 39, 137, 66, 82, 154, 204, 38, 71, 196, 18, 122, 112, 184, 166, 65, 129, 222, 122, 45, 124, 47, 147, 21, 146, 171, 57, 175, 28, 211, 236, 141, 204, 80, 223, 58, 114, 247, 214, 111, 241, 140, 155, 33, 83, 96, 211, 97, 48, 90, 151, 121, 248, 6, 224, 54, 183, 135, 183, 48, 42, 98, 70, 186, 214, 59, 15, 200, 211, 232, 117, 16, 36, 85, 58, 205, 77, 19, 160, 31, 79, 122, 196, 202, 45, 105, 88, 78, 85 },
                            PasswordString = "",
                            Username = "BetaTester"
                        });
                });

            modelBuilder.Entity("TibiaApi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AcessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SkillsId")
                        .HasColumnType("int");

                    b.Property<int>("Vocation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("SkillsId");

                    b.ToTable("TB_CHARACTERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            AcessDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            Name = "BetaCharacter",
                            Vocation = 1
                        });
                });

            modelBuilder.Entity("TibiaApi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AxeFigthing")
                        .HasColumnType("int");

                    b.Property<int>("ClubFigthing")
                        .HasColumnType("int");

                    b.Property<int>("DistanceFigthing")
                        .HasColumnType("int");

                    b.Property<int>("Fishing")
                        .HasColumnType("int");

                    b.Property<int>("FistFigthing")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicLevel")
                        .HasColumnType("int");

                    b.Property<int>("Shielding")
                        .HasColumnType("int");

                    b.Property<int>("SwordFigthing")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_SKILLS");
                });

            modelBuilder.Entity("TibiaApi.Models.Character", b =>
                {
                    b.HasOne("TibiaApi.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TibiaApi.Models.Skill", "Skills")
                        .WithMany()
                        .HasForeignKey("SkillsId");

                    b.Navigation("Account");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
